{"version":3,"sources":["components/Top/Top.module.css","components/QnA/QnA.module.css","App.module.css","assets/img/logo.png","components/Modal/Modal.module.css","components/Backdrop/Backdrop.module.css","assets/img/bg-large.jpg","assets/img/bg-small.jpg","assets/img/bg-xs.jpg","components/Top/Top.js","components/QnA/QnA.js","components/Backdrop/Backdrop.js","components/Modal/Modal.js","components/Modal/ModalStates.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Top","CentralPicture","Level","CurrentLevel","PassedLevel","notPassedLevel","QnA","Answer","Question","Correct","correct-answer","Wrong","wrong-answer","App","__webpack_require__","p","Modal","Backdrop","_this","this","levels","Array","fill","map","el","i","props","level","react_default","a","createElement","style","backgroundColor","key","className","classes","reverse","src","logo","alt","width","Component","cx","classNames","bind","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleAnswer","ans","state","answer","setState","setTimeout","_this2","classA","question","classB","classC","classD","Container","Row","Col","xs","md","onClick","backdrop","show","nextProps","nextState","children","Fragment","transform","opacity","StartModal","startGame","LoseModal","WinModal","shuffleQuestions","nrOfExistingQuestions","keys","allQuestions","length","selectedQuestions","rndint","Math","round","random","includes","console","log","push","newQuestions","questionList","currentQuestion","lifelines","phonecall","5050","askPublic","lvl","closeModal","modalContent","ModalStates_WinModal","modal","ModalStates_LoseModal","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","A","B","C","D","currentAnswer","ModalStates_StartModal","bgimg","bgXs","window","innerWidth","bgLarge","bgSmall","backgroundImage","concat","components_Modal_Modal","modalClosed","components_Top_Top","components_QnA_QnA","correct","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.050baae1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Top\":\"Top_Top__FfokK\",\"CentralPicture\":\"Top_CentralPicture__1tG8C\",\"Level\":\"Top_Level__1bUQR\",\"CurrentLevel\":\"Top_CurrentLevel__2pqha\",\"PassedLevel\":\"Top_PassedLevel__3CXYV\",\"notPassedLevel\":\"Top_notPassedLevel__2A1MF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QnA\":\"QnA_QnA__1KfNr\",\"Answer\":\"QnA_Answer__1ByNO\",\"Question\":\"QnA_Question__2630O\",\"Correct\":\"QnA_Correct__3sXrb\",\"correct-answer\":\"QnA_correct-answer__1cw-Y\",\"Wrong\":\"QnA_Wrong__Dkv0N\",\"wrong-answer\":\"QnA_wrong-answer__2SWeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__SVHEK\"};","module.exports = __webpack_public_path__ + \"static/media/logo.f43a339c.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3-r_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1vYsK\"};","module.exports = __webpack_public_path__ + \"static/media/bg-large.4c1df529.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg-small.bcd9ae6b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg-xs.5f11feeb.jpg\";","import React, { Component } from 'react';\r\nimport classes from './Top.module.css';\r\nimport logo from '../../assets/img/logo.png';\r\n\r\nclass Top extends Component {\r\n    render() {\r\n\r\n        let levels = Array(15)\r\n            .fill()\r\n            .map((el, i) => {\r\n                if (this.props.level > 1 && (i + 1) < this.props.level) {\r\n                    return (<p style={{ backgroundColor: '#00ff00' }} key={i}>Level {i + 1} - {this.props.levels[i + 1]}</p>)\r\n                } else if (this.props.level <= 15 && (i + 1) === this.props.level) {\r\n                    return (<p className={classes.CurrentLevel} key={i}>Level {i + 1} - {this.props.levels[i + 1]}</p>)\r\n                } else {\r\n                    return (<p className={classes.notPassedLevel} key={i}>Level {i + 1} - {this.props.levels[i + 1]}</p>)\r\n                }\r\n            })\r\n            .reverse()\r\n\r\n\r\n        return (\r\n            <div className={classes.Top} >\r\n                <div className={classes.CentralPicture}>\r\n                    <img src={logo} alt='logo' style={{ width: '40vw' }} />\r\n                </div>\r\n                <div className={classes.Level}>\r\n                    {levels}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Top;","import React, { Component } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport classes from './QnA.module.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nlet cx = classNames.bind(classes);\r\n\r\nclass QnA extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answer: null\r\n        }\r\n    }\r\n\r\n    handleAnswer = (ans) => {\r\n\r\n        if (this.state.answer === null) {\r\n            this.setState({\r\n                answer: ans\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    answer: null\r\n                });\r\n                this.props.answer(ans);\r\n            }, 3000);\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let classA = cx({\r\n            Answer: true,\r\n            Correct: ((this.state.answer === 'A') && (this.state.answer === this.props.question.answer)),\r\n            Wrong: ((this.state.answer === 'A') && (this.state.answer !== this.props.question.answer))\r\n        })\r\n        let classB = cx({\r\n            Answer: true,\r\n            Correct: ((this.state.answer === 'B') && (this.state.answer === this.props.question.answer)),\r\n            Wrong: ((this.state.answer === 'B') && (this.state.answer !== this.props.question.answer))\r\n        })\r\n        let classC = cx({\r\n            Answer: true,\r\n            Correct: ((this.state.answer === 'C') && (this.state.answer === this.props.question.answer)),\r\n            Wrong: ((this.state.answer === 'C') && (this.state.answer !== this.props.question.answer))\r\n        })\r\n        let classD = cx({\r\n            Answer: true,\r\n            Correct: ((this.state.answer === 'D') && (this.state.answer === this.props.question.answer)),\r\n            Wrong: ((this.state.answer === 'D') && (this.state.answer !== this.props.question.answer))\r\n        })\r\n\r\n\r\n        return (\r\n            <div className={classes.QnA}>\r\n                <Container>\r\n    \r\n                    <Row>\r\n                        <Col>\r\n                            <div className={classes.Question}>\r\n                                <p>{this.props.question.question}</p>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={6} className={classA} onClick={() => this.handleAnswer('A')}><p>A &nbsp;&nbsp;{this.props.question['A']}</p></Col>\r\n                        <Col xs={12} md={6} className={classB} onClick={() => this.handleAnswer('B')}><p>B &nbsp;&nbsp;{this.props.question['B']}</p></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={6} className={classC} onClick={() => this.handleAnswer('C')}><p>C &nbsp;&nbsp;{this.props.question['C']}</p></Col>\r\n                        <Col xs={12} md={6} className={classD} onClick={() => this.handleAnswer('D')}><p>D &nbsp;&nbsp;{this.props.question['D']} </p></Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QnA;","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop}></div> : null\n);\n\nexport default backdrop;","import React, { Component } from 'react';\n\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render() {\n        return (\n            <>\n                <Backdrop show={this.props.show} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)  translate(-50%, -50%)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}\n                    >\n                    {this.props.children}\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Modal;","import React from 'react';\r\n\r\nexport const StartModal = (props) => (\r\n    <>\r\n        <h1> Press Start</h1>\r\n        <button onClick={props.startGame}> START </button>\r\n    </>\r\n);\r\nexport const LoseModal = (props) => (\r\n    <>\r\n        <h1> Too bad, you lost</h1>\r\n        <button onClick={props.startGame}> RESTART </button>\r\n    </>\r\n);\r\nexport const WinModal = (props) => (\r\n    <>\r\n        <h1> Yee! You are now rich! Play again?</h1>\r\n        <button onClick={props.startGame}> RESTART </button>\r\n    </>\r\n);","import React, { Component } from 'react';\nimport classes from './App.module.css';\nimport Top from './components/Top/Top';\nimport QnA from './components/QnA/QnA';\nimport Modal from './components/Modal/Modal';\nimport bgLarge from './assets/img/bg-large.jpg';\nimport bgSmall from './assets/img/bg-small.jpg';\nimport bgXs from './assets/img/bg-xs.jpg';\nimport allQuestions from \"./assets/questions/questionList.json\";\nimport {StartModal, LoseModal, WinModal} from './components/Modal/ModalStates';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n  \n    // let startModal = (\n    //   <>\n    //     <h1> Press Start</h1>\n    //     <button onClick={this.startGame}> START </button>\n    //   </>\n    // );\n    // let loseModal = (\n    //   <>\n    //     <h1> Too bad, you lost</h1>\n    //     <button onClick={this.startGame}> RESTART </button>\n    //   </>\n    // );\n    // let winModal = (\n    //   <>\n    //     <h1> Yee! You are now rich! Play again?</h1>\n    //     <button onClick={this.startGame}> RESTART </button>\n    //   </>\n    // );\n    this.state = {\n      lvl: 1,\n      levels: {\n        1: '500€',\n        2: '1.000€',\n        3: '1.500€',\n        4: '2.000€',\n        5: '3.000€',\n        6: '5.000€',\n        7: '7.000€',\n        8: '10.000€',\n        9: '15.000€',\n        10: '20.000€',\n        11: '30.000€',\n        12: '70.000€',\n        13: '150.000€',\n        14: '300.000€',\n        15: '1 Million',\n      },\n      lifelines: {\n        phonecall: true,\n        5050: true,\n        askPublic: true\n      },\n      questionList: {},\n      currentQuestion: {\n        A: '',\n        B: '',\n        C: '',\n        D: '',\n        answer: '',\n        question: ''\n      },\n      currentAnswer: null,\n      modal: true,\n      // start: startModal,\n      // lose: loseModal,\n      // win: winModal,\n      modalContent: <StartModal startGame={this.startGame}/>\n    }\n  }\n\n  shuffleQuestions = () => {\n    let nrOfExistingQuestions = Object.keys(allQuestions).length;\n    let selectedQuestions = Array(0);\n    for (let i = 1; i <= 15; i++) {\n      let rndint = Math.round(Math.random() * nrOfExistingQuestions);\n      if (selectedQuestions.includes(rndint)) {\n        while (selectedQuestions.includes(rndint)) {\n          rndint = Math.round(Math.random() * nrOfExistingQuestions);\n          console.log(rndint);\n        }\n      };\n      selectedQuestions.push(rndint);\n    }\n    let newQuestions = selectedQuestions.map((el) => allQuestions[el]);\n    return newQuestions;\n  }\n\n  startGame = () => {\n    let newQuestions = this.shuffleQuestions();\n    this.setState({\n      questionList: newQuestions,\n      currentQuestion: newQuestions[0],\n      lifelines: {\n        phonecall: true,\n        5050: true,\n        askPublic: true\n      },\n      lvl: 1\n    });\n    this.closeModal();\n  }\n\n  handleAnswer = (ans) => {\n    if(ans === this.state.currentQuestion.answer){\n      if (this.state.lvl < 15){\n        this.setState({\n          lvl: this.state.lvl + 1 ,\n          currentQuestion: this.state.questionList[this.state.lvl]\n        });\n      }\n      else {\n        this.setState({\n          modalContent: <WinModal startGame={this.startGame}/>,\n          modal: true\n        })\n      }\n    }else {\n      this.setState({\n        modalContent: <LoseModal startGame={this.startGame}/>,\n        modal: true\n      })\n    }\n  }\n\n  closeModal = () => {\n    this.setState({\n        modal: false,\n        modalContent: (<p></p>)\n    })\n}\n\n  render() {\n\n    let bgimg = bgXs;\n    if (window.innerWidth >= 1000) {\n      bgimg = bgLarge;\n    } else {\n      if (window.innerWidth >= 750) {\n        bgimg = bgSmall;\n      }\n    }\n\n    return (\n      <div style={{ backgroundImage: `url(${bgimg})` }} className={classes.App} >\n        <Modal show={this.state.modal} modalClosed={this.closeModal}>\n          {this.state.modalContent}\n        </Modal>\n        <Top level={this.state.lvl} levels={this.state.levels}></Top>\n        <QnA question={this.state.currentQuestion} answer={this.handleAnswer} correct={this.state.currentAnswer}></QnA>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}